---
import BaseHead from '../../components/BaseHead.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import type {GetStaticPathsOptions} from "astro";

export async function getStaticPaths({paginate}: GetStaticPathsOptions){
	const posts = (await getCollection('blog'))
	.filter((post) => !post.data.draft)
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
	);

  	return paginate(posts, { pageSize: 2 });
}

// All paginated data is passed on the "page" prop
const { page } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<BaseLayout>
			<div id="site-body">
				<div class="container">
					{
						page.data.map((post) => (
								<a href={`/blog/${post.slug}/`}>
									<div class="content">
										<h1 class="title">{post.data.title}</h1>
										<p class="date"> Published on <FormattedDate date={post.data.pubDate} /></p>
										<p>{post.data.description}</p>
									</div>
								</a>
						))
					}
					<div class="pagination">
						<h4>Page {page.currentPage}</h4>
						<!-- {page.url.first ? <a href={page.url.first}>First</a> : null} -->
						{page.url.prev ? <a href={page.url.prev}>◀ Previous</a> : null}
						{page.url.next ? <a href={page.url.next}>Next ▶</a> : null}
						<!-- {page.url.last ? <a href={page.url.last}>Last</a> : null} -->
					</div>
				</div>
			</div>
		</BaseLayout>
	</body>
</html>
